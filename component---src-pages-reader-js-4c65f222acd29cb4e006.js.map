{"version":3,"sources":["webpack:///./src/components/TruffleField/Types/Comment.js","webpack:///./src/components/TruffleField/Types/Tag.js","webpack:///./src/components/TruffleField/Types/Plain.js","webpack:///./src/components/TruffleField/Types/List.js","webpack:///./src/components/TruffleField/Types/Instagram.js","webpack:///./src/components/TruffleField/Types/Link.js","webpack:///./src/components/TruffleField/Types/Bible.js","webpack:///./src/components/TruffleField/Types/index.js","webpack:///./src/components/TruffleField/Types/Audio.js","webpack:///./src/components/TruffleField/Types/Emoji.js","webpack:///./src/components/TruffleField/index.js","webpack:///./src/components/TruffleFields/index.js","webpack:///./src/components/GuestSummary/index.js","webpack:///./src/components/Truffle/index.js","webpack:///./src/lib/format-timestamp.js","webpack:///./src/lib/TruffleRepository.js","webpack:///./src/lib/extract-truffle-fields.js","webpack:///./src/components/TruffleFeed/index.js","webpack:///./src/components/Guests/index.js","webpack:///./src/components/SingleTruffle/index.js","webpack:///./src/pages/reader.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js"],"names":["Comment","_ref","value","react_default","a","createElement","Tag","styled","span","withConfig","displayName","componentId","Types_Tag","type","Plain","List","map","listItem","key","Instagram","es","url","maxWidth","hideCaption","containerTagName","protocol","onLoading","onSuccess","onAfterRender","onFailure","Link","Types_Link","indexOf","href","Bible","typeMap","tag","comment","recipe","link","podcast episode","controls","preload","src","bible passage","passageUrl","instagram","emoji","Types","find","normalizedType","toLowerCase","hasOwnProperty","Array","isArray","TruffleField","Renderer","TruffleFields","fields","field","components_TruffleField","GuestSummary","div","components_GuestSummary","guestCount","Truffle","components_Truffle","id","timestamp","hostId","guests","gatsby_link_default","to","Date","toDateString","formatTimestamp","components_TruffleFields","length","TruffleRepository","this","masterList","Map","hostIdList","guestList","parse","jsonFeed","_this","truffle","processTruffle","set","isGuest","addToGuestList","push","hostGuests","get","getGuests","_this2","gId","extract_truffle_fields","tags","concat","TruffleFeed","props","_React$Component","call","state","error","isLoaded","truffleRepo","componentDidMount","fetch","then","res","json","rawFeed","repo","result","setState","render","_this$state","message","extractFields","React","Component","Guests","BackLink","SingleTruffle","components_Guests","Reader","hash","location","layout","components_TruffleFeed","components_SingleTruffle","replace","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","propTypes","PropTypes","shape","string","isRequired","Header","style","background","marginBottom","margin","padding","color","textDecoration","TemplateWrapper","children","Helmet_default","title","meta","name","content","components_Header","paddingTop","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","Error","object","func"],"mappings":"2IAMeA,SAJC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACdC,EAAAC,EAAAC,cAAA,kBAAaH,cCATI,EAAMC,IAAOC,KAAVC,WAAA,CAAAC,YAAA,MAAAC,YAAA,gBAAGJ,CAAH,uIAWMK,EAAA,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,KAAHZ,EAASC,MAAT,OACbC,EAAAC,EAAAC,cAACC,EAAD,SAAOO,ICNMC,EAPD,SAAAb,GAAA,IAAGY,EAAHZ,EAAGY,KAAMX,EAATD,EAASC,MAAT,OACZC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKQ,GACLV,EAAAC,EAAAC,cAAA,UAAKH,KCQMa,EAXF,SAAAd,GAAA,IAAGY,EAAHZ,EAAGY,KAAMX,EAATD,EAASC,MAAT,OACXC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cAASQ,GACTV,EAAAC,EAAAC,cAAA,UACGH,EAAMc,IAAI,SAAAC,GAAQ,OACjBd,EAAAC,EAAAC,cAAA,MAAIa,IAAKD,GAAWA,iBCJbE,EAAA,SAAAlB,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACbC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,IAAKnB,EACLoB,SAAU,IACVC,aAAa,EACbC,iBAAiB,MACjBC,SAAS,GACTC,UAAW,aACXC,UAAW,aACXC,cAAe,aACfC,UAAW,gBCTTC,EAAOvB,IAAOH,EAAVK,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAGJ,CAAH,8CAIKwB,EAAA,SAAA9B,GAAe,IAAZC,EAAYD,EAAZC,MAMhB,OAAsD,IAAlDA,EAAM8B,QAAQ,gCAEd7B,EAAAC,EAAAC,cAACc,EAAD,CAAWjB,MAAOA,IAKpBC,EAAAC,EAAAC,cAACyB,EAAD,CAAMG,KAAM/B,GAAQA,IClBlBgC,EAAQ3B,IAAOH,EAAVK,WAAA,CAAAC,YAAA,QAAAC,YAAA,gBAAGJ,CAAH,8CCOP4B,EAAU,CACZC,IAAO9B,EACP+B,QAAWrC,EACXsC,OAAUtC,EACVuC,KAAQT,EACRU,kBCba,SAAAvC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACbC,EAAAC,EAAAC,cAAA,SAAOoC,SAAS,WAAWC,QAAQ,QACjCvC,EAAAC,EAAAC,cAAA,UAAQsC,IAAKzC,MDYf0C,gBDRa,SAAA3C,GAAe,IAAZC,EAAYD,EAAZC,MACZ2C,EAAa,6DAA+D3C,EAChF,OACEC,EAAAC,EAAAC,cAAC6B,EAAD,CAAOD,KAAMY,GAAa3C,ICM5B4C,UAAa3B,EACb4B,MEhBa,SAAA9C,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACbC,EAAAC,EAAAC,cAAA,YAAQH,KF2CK8C,oCAxBNC,cAAKpC,EAAMX,GAChB,IAAIgD,EAAiBrC,EAAKsC,cAE1B,OAAIhB,EAAQiB,eAAeF,GAClBf,EAAQe,GAGK,kBAAXhD,EACFI,EAGL+C,MAAMC,QAAQpD,GACTa,EAIa,iBAAXb,GAAiD,IAA1BA,EAAM8B,QAAQ,QACvCF,EAGFhB,QG/BIyC,EARM,SAAAtD,GAAqB,IAAlBY,EAAkBZ,EAAlBY,KAAMX,EAAYD,EAAZC,MACxBsD,EAAWR,EAAMC,KAAKpC,EAAMX,GAEhC,OACEC,EAAAC,EAAAC,cAACmD,EAAD,CAAU3C,KAAMA,EAAMX,MAAOA,KCIlBuD,EARO,SAAAxD,GAAA,IAAGyD,EAAHzD,EAAGyD,OAAH,OACpBvD,EAAAC,EAAAC,cAAA,WACGqD,EAAO1C,IAAI,SAAA2C,GAAK,OACfxD,EAAAC,EAAAC,cAACuD,EAAD,CAAc1C,IAAKyC,EAAM9C,KAAMA,KAAM8C,EAAM9C,KAAMX,MAAOyD,EAAMzD,YCH9D2D,EAAetD,IAAOuD,IAAVrD,WAAA,CAAAC,YAAA,eAAAC,YAAA,eAAGJ,CAAH,uIAUHwD,EAAA,SAAA9D,GAAoB,IAAjB+D,EAAiB/D,EAAjB+D,WAChB,OAAmB,IAAfA,EACK7D,EAAAC,EAAAC,cAACwD,EAAD,kBACEG,EAAa,EACf7D,EAAAC,EAAAC,cAACwD,EAAD,KAAeG,EAAf,WAEA7D,EAAAC,EAAAC,cAAA,+BCZL4D,EAAU1D,IAAOuD,IAAVrD,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAGJ,CAAH,6EAOE2D,EAAA,SAAAjE,GAAA,IAAGkE,EAAHlE,EAAGkE,GAAIC,EAAPnE,EAAOmE,UAAmBV,GAA1BzD,EAAkBoE,OAAlBpE,EAA0ByD,QAAQY,EAAlCrE,EAAkCqE,OAAlC,OACbnE,EAAAC,EAAAC,cAAC4D,EAAD,KACE9D,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAMoE,GAAI,aAAeL,GChBd,SAACC,GAEd,OADW,IAAIK,KAAKL,GACRM,eDePC,CAAgBP,IAEnBjE,EAAAC,EAAAC,cAACuE,EAAD,CAAelB,OAAQA,IACvBvD,EAAAC,EAAAC,cAAC0D,EAAD,CAAcC,WAAYM,EAAOO,WEmBtBC,uCArCb,SAAAA,IACEC,KAAKC,WAAa,IAAIC,IACtBF,KAAKG,WAAa,GAClBH,KAAKI,UAAY,IAAIF,+BAGvBG,eAAMC,GAAU,IAAAC,EAAAP,KACdM,EAASrE,IAAK,SAAAuE,GAAO,OAAID,EAAKE,eAAeD,QAG/CC,wBAAeD,GACbR,KAAKC,WAAWS,IAAIF,EAAQpB,GAAIoB,GAE5BR,KAAKW,QAAQH,GACfR,KAAKY,eAAeJ,GAEpBR,KAAKG,WAAWU,KAAKL,EAAQpB,OAIjCuB,iBAAQH,GACN,OAAOA,EAAQnC,eAAe,aAGhCuC,wBAAeJ,GACb,IAAIM,EAAad,KAAKI,UAAUW,IAAIP,EAAQlB,SAAW,GACvDwB,EAAWD,KAAKL,EAAQpB,IACxBY,KAAKI,UAAUM,IAAIF,EAAQlB,OAAQwB,MAGrCE,mBAAUR,GAAS,IAAAS,EAAAjB,KAGjB,OAFeA,KAAKI,UAAUW,IAAIP,EAAQpB,KAAO,IAEjCnD,IAAK,SAAAiF,GAAG,OAAID,EAAKhB,WAAWc,IAAIG,YCnCrCC,EAAA,SAAUX,GACvB,IAAI7B,EAAS,GACTyC,EAAO,GAEX,IAAK,IAAIjF,KAAOqE,EACF,OAARrE,GAAwB,WAARA,GAA4B,cAARA,IACT,kBAAlBqE,EAAQrE,GACjBiF,EAAKP,KAAM,CAAE/E,KAAMK,EAAKhB,MAAOqF,EAAQrE,KAEvCwC,EAAOkC,KAAM,CAAE/E,KAAMK,EAAKhB,MAAOqF,EAAQrE,MAK/C,OAAOwC,EAAO0C,OAAOD,ICqDRE,cA7Db,SAAAA,EAAYC,GAAO,IAAAhB,EAAA,OACjBA,EAAAiB,EAAAC,KAAAzB,KAAMuB,IAANvB,MACK0B,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,YAAa,MALEtB,sCASnBuB,6BAAoB,IAAAb,EAAAjB,KAClB+B,MAAM,cACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,IAAIC,EAAO,IAAIrC,EAEf,OADAqC,EAAK/B,MAAM8B,GACJC,IAERJ,KACC,SAACK,GACCpB,EAAKqB,SAAS,CACZV,UAAU,EACVC,YAAaQ,KAGjB,SAACV,GACCV,EAAKqB,SAAS,CACZV,UAAU,EACVD,eAMVY,kBAAS,IAAAC,EACkCxC,KAAK0B,MAAtCC,EADDa,EACCb,MAAOC,EADRY,EACQZ,SAAUC,EADlBW,EACkBX,YACzB,OAAIF,EACKvG,EAAAC,EAAAC,cAAA,qBAAaqG,EAAMc,SAChBb,EAIRxG,EAAAC,EAAAC,cAAA,WACGuG,EAAY1B,WAAWlE,IAAI,SAAAmD,GACxB,IAAIoB,EAAUqB,EAAY5B,WAAWc,IAAI3B,GACzC,OAAOhE,EAAAC,EAAAC,cAAC6D,EAAD,CACChD,IAAKqE,EAAQpB,GACbA,GAAIoB,EAAQpB,GACZE,OAAQkB,EAAQlB,OAChBD,UAAWmB,EAAQnB,UACnBV,OAAQ+D,EAAclC,GACtBjB,OAAQsC,EAAYb,UAAUR,QAZvCpF,EAAAC,EAAAC,cAAA,6BAvCaqH,IAAMC,WCuBjBC,EAxBA,SAAA3H,GAAgB,IAAbqE,EAAarE,EAAbqE,OAEhB,OAAIA,EAAOO,OAAS,EAEhB1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACCiE,EAAOtD,IAAI,SAAAuE,GACR,OAAOpF,EAAAC,EAAAC,cAAC6D,EAAD,CACChD,IAAKqE,EAAQpB,GACbA,GAAIoB,EAAQpB,GACZE,OAAQkB,EAAQlB,OAChBD,UAAWmB,EAAQnB,UACnBV,OAAQ+D,EAAclC,GACtBjB,OAAQ,QAQnBnE,EAAAC,EAAAC,cAAA,aCjBHwH,EAAWtH,YAAOuB,KAAVrB,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,2BAmECuH,cA9Db,SAAAA,EAAYxB,GAAO,IAAAhB,EAAA,OACjBA,EAAAiB,EAAAC,KAAAzB,KAAMuB,IAANvB,MACK0B,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,YAAa,KACbzC,GAAImC,EAAMnC,IANKmB,sCAUnBuB,6BAAoB,IAAAb,EAAAjB,KAClB+B,MAAM,cACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,IAAIC,EAAO,IAAIrC,EAEf,OADAqC,EAAK/B,MAAM8B,GACJC,IAERJ,KACC,SAACK,GACCpB,EAAKqB,SAAS,CACZV,UAAU,EACVC,YAAaQ,KAGjB,SAACV,GACCV,EAAKqB,SAAS,CACZV,UAAU,EACVD,eAMVY,kBAAS,IAAAC,EACsCxC,KAAK0B,MAA1CC,EADDa,EACCb,MAAOC,EADRY,EACQZ,SAAUC,EADlBW,EACkBX,YAAazC,EAD/BoD,EAC+BpD,GACtC,GAAIuC,EACF,OAAOvG,EAAAC,EAAAC,cAAA,qBAAaqG,EAAMc,SACrB,GAAKb,EAEL,CACL,IAAIpB,EAAUqB,EAAY5B,WAAWc,IAAI3B,GACrCG,EAASsC,EAAYb,UAAUR,GACnC,OACEpF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6D,EAAD,CACEhD,IAAKqE,EAAQpB,GACbA,GAAIoB,EAAQpB,GACZE,OAAQkB,EAAQlB,OAChBD,UAAWmB,EAAQnB,UACnBV,OAAQ+D,EAAclC,GACtBjB,OAAQ,KAETnE,EAAAC,EAAAC,cAAC0H,EAAD,CAAQzD,OAAQA,IAChBnE,EAAAC,EAAAC,cAACwH,EAAD,CAAUrD,GAAG,YAAb,sBAfL,OAAOrE,EAAAC,EAAAC,cAAA,6BAxCeqH,IAAMC,oBCYnBK,UAlBA,SAAC1B,GACd,IAAI2B,EAAO3B,EAAM4B,SAASD,KAE1B,MAAa,KAATA,GAAwB,OAATA,EAEf9H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACEhI,EAAAC,EAAAC,cAAC+H,EAAD,OAMJjI,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACEhI,EAAAC,EAAAC,cAACgI,EAAD,CAAelE,GAAI8D,EAAKK,QAAQ,MAAO,6BCnB7C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAA3I,GAAkB,IAAfiI,EAAejI,EAAfiI,SACpBW,EAAgBC,UAAOC,4BAA4Bb,EAASc,UAClE,OAAOtB,IAAMrH,cAAc4I,IAApBC,OAAAC,OAAA,CACLjB,WACAW,iBACGA,EAAc5B,QAIrB2B,EAAiBQ,UAAY,CAC3BlB,SAAUmB,IAAUC,MAAM,CACxBN,SAAUK,IAAUE,OAAOC,aAC1BA,YAGUZ,4HCWAa,EA7BA,kBACbtJ,EAAAC,EAAAC,cAAA,OACEqJ,MAAO,CACLC,WAAY,gBACZC,aAAc,YAGhBzJ,EAAAC,EAAAC,cAAA,OACEqJ,MAAO,CACLG,OAAQ,SACRvI,SAAU,IACVwI,QAAS,sBAGX3J,EAAAC,EAAAC,cAAA,MAAIqJ,MAAO,CAAEG,OAAQ,IACnB1J,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CACEoE,GAAG,IACHkF,MAAO,CACLK,MAAO,QACPC,eAAgB,SAJpB,sBCYOC,IAxBS,SAAAhK,GAAA,IAAGiK,EAAHjK,EAAGiK,SAAH,OACtB/J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8J,EAAA/J,EAAD,CACEgK,MAAM,UACNC,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,+CAChC,CAAED,KAAM,WAAYC,QAAS,0CAGjCpK,EAAAC,EAAAC,cAACmK,EAAD,MACArK,EAAAC,EAAAC,cAAA,OACEqJ,MAAO,CACLG,OAAQ,SACRvI,SAAU,IACVwI,QAAS,wBACTW,WAAY,IAGbP,uCCxBPQ,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAnL,IAAAsK,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAArL,IAAA,IAAAsL,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBrD,IAAMiE,cAAc,IAEzCX,EAAc,SAAA1E,GAAK,OACvB4E,EAAA9K,EAAAC,cAAC0K,EAAmBa,SAApB,KACG,SAAAC,GACC,OACEvF,EAAMwF,MACLD,EAAgBvF,EAAMyF,QAAUF,EAAgBvF,EAAMyF,OAAOD,MAEtDxF,EAAMgB,QAAUhB,EAAM4D,UAC5B5D,EAAMwF,KAAOxF,EAAMwF,KAAKA,KAAOD,EAAgBvF,EAAMyF,OAAOD,MAGvDZ,EAAA9K,EAAAC,cAAA,uCAaf,SAASyK,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAY5B,UAAY,CACtB0C,KAAMzC,IAAU4C,OAChBF,MAAO1C,IAAUE,OAAOC,WACxBlC,OAAQ+B,IAAU6C,KAClBhC,SAAUb,IAAU6C","file":"component---src-pages-reader-js-4c65f222acd29cb4e006.js","sourcesContent":["import React from 'react'\n\nconst Comment = ({ value }) => (\n  <blockquote>{value}</blockquote>\n)\n\nexport default Comment\n","import React from 'react'\nimport styled from \"styled-components\"\n\nconst Tag = styled.span`\n  display: inline-block;\n  padding-right: .6em;\n  padding-left: .6em;\n  margin-right: .25rem;\n  font-family: sans-serif;\n  font-size: 75%;\n  color: #4caa8a;\n`\n\n// TODO: determine what to do when the value is false. Strikethrough?\nexport default ({ type, value }) => (\n  <Tag>#{type}</Tag>\n)\n","import React from 'react'\n\nconst Plain = ({ type, value }) => (\n  <dl>\n    <dt>{type}</dt>\n    <dd>{value}</dd>\n  </dl>\n)\n\nexport default Plain\n","import React from 'react'\n\nconst List = ({ type, value }) => (\n  <div>\n    <strong>{type}</strong>\n    <ul>\n      {value.map(listItem => (\n        <li key={listItem}>{listItem}</li>\n      ))}\n    </ul>\n  </div>\n)\n\nexport default List\n","import React from 'react'\nimport Instagram from 'react-instagram-embed'\n\nexport default ({ value }) => (\n  <Instagram\n    url={value}\n    maxWidth={320}\n    hideCaption={false}\n    containerTagName='div'\n    protocol=''\n    onLoading={() => {}}\n    onSuccess={() => {}}\n    onAfterRender={() => {}}\n    onFailure={() => {}}\n  />\n)\n","import React from 'react'\nimport Instagram from './Instagram'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n  display: block;\n  padding: .5em 0em .5em 0em;\n`\nexport default ({ value }) => {\n\n  // Historically, I've posted instagrams as \"Link\" types. Unfortunately, this\n  // brings up the issue that I should probably have better link handling in\n  // this reader in general. For now though, I want to display what I have in\n  // the most expedient way possible.\n  if (value.indexOf('https://www.instagram.com/p/') === 0) {\n    return (\n      <Instagram value={value} />\n    )\n  }\n\n  return (\n    <Link href={value}>{value}</Link>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Bible = styled.a`\n  display: block;\n  padding: .5em 0em .5em 0em;\n`\n\nexport default ({ value }) => {\n  let passageUrl = 'https://www.biblegateway.com/passage/?version=NRSV&search=' + value\n  return (\n    <Bible href={passageUrl}>{value}</Bible>\n  )\n}\n","import Comment from './Comment'\nimport Tag from './Tag'\nimport Plain from './Plain'\nimport List from './List'\nimport Link from './Link'\nimport Audio from './Audio'\nimport Bible from './Bible'\nimport Instagram from './Instagram'\nimport Emoji from './Emoji'\n\nlet typeMap = {\n  'tag': Tag,\n  'comment': Comment,\n  'recipe': Comment,\n  'link': Link,\n  'podcast episode': Audio,\n  'bible passage': Bible,\n  'instagram': Instagram,\n  'emoji': Emoji\n}\n\nclass Types {\n  static find(type, value) {\n    let normalizedType = type.toLowerCase()\n\n    if (typeMap.hasOwnProperty(normalizedType)) {\n      return typeMap[normalizedType]\n    }\n\n    if (typeof(value) === \"boolean\") {\n      return Tag\n    }\n\n    if (Array.isArray(value)) {\n      return List\n    }\n\n    // Handle string types last\n    if (typeof(value) === \"string\" && value.indexOf('http') === 0) {\n      return Link\n    }\n\n    return Plain\n  }\n}\n\nexport default Types\n","import React from 'react'\n\nexport default ({ value }) => (\n  <audio controls=\"controls\" preload=\"none\">\n    <source src={value}></source>\n  </audio>\n)\n","import React from 'react'\n\nexport default ({ value }) => (\n  <span>{ value }</span> \n)\n\n","import React from 'react'\nimport Types from './Types'\n\nconst TruffleField = ({ type, value }) => {\n  let Renderer = Types.find(type, value)\n\n  return (\n    <Renderer type={type} value={value} />\n  )\n}\n\nexport default TruffleField\n","import React from 'react'\nimport TruffleField from '../TruffleField'\n\nconst TruffleFields = ({ fields }) => (\n  <div>\n    {fields.map(field => (\n      <TruffleField key={field.type} type={field.type} value={field.value} />\n    ))}\n  </div>\n)\n\nexport default TruffleFields\n","import React from 'react'\nimport styled from \"styled-components\"\n\nconst GuestSummary = styled.div`\n  display: inline-block;\n  padding-right: .6em;\n  padding-left: .6em;\n  margin-right: .25rem;\n  font-family: sans-serif;\n  font-size: 75%;\n  color: #4caa8a;\n`\n\nexport default ({ guestCount }) => {\n  if (guestCount === 1) {\n    return <GuestSummary>One guest</GuestSummary>\n  } else if (guestCount > 1) {\n    return <GuestSummary>{guestCount} guests</GuestSummary>\n  } else {\n    return <div />\n  }\n}\n","import React from 'react'\nimport TruffleFields from '../TruffleFields'\nimport GuestSummary from '../GuestSummary'\nimport formatTimestamp from '../../lib/format-timestamp'\nimport styled from \"styled-components\"\nimport Link from \"gatsby-link\"\n\nconst Truffle = styled.div`\n  border-radius: .25rem;\n  margin: 1rem;\n  padding: 1rem;\n  border: 1px solid #e9ecef;\n`\n\nexport default ({ id, timestamp, hostId, fields, guests }) => (\n  <Truffle>\n    <Link to={'/reader/#/' + id}>\n      {formatTimestamp(timestamp)}\n    </Link>\n    <TruffleFields fields={fields} />\n    <GuestSummary guestCount={guests.length} />\n  </Truffle>\n)\n","export default (timestamp) => {\n  let date = new Date(timestamp)\n  return date.toDateString()\n}\n","class TruffleRepository {\n\n  constructor() {\n    this.masterList = new Map()\n    this.hostIdList = []\n    this.guestList = new Map()\n  }\n\n  parse(jsonFeed) {\n    jsonFeed.map( truffle => this.processTruffle(truffle) )\n  }\n\n  processTruffle(truffle) {\n    this.masterList.set(truffle.id, truffle)\n\n    if (this.isGuest(truffle)) {\n      this.addToGuestList(truffle)\n    } else {\n      this.hostIdList.push(truffle.id)\n    }\n  }\n\n  isGuest(truffle) {\n    return truffle.hasOwnProperty('hostId')\n  }\n\n  addToGuestList(truffle) {\n    var hostGuests = this.guestList.get(truffle.hostId) || []\n    hostGuests.push(truffle.id)\n    this.guestList.set(truffle.hostId, hostGuests)\n  }\n\n  getGuests(truffle) {\n    var guestIds = this.guestList.get(truffle.id) || []\n\n    return guestIds.map( gId => this.masterList.get(gId) )\n  }\n}\n\nexport default TruffleRepository\n","export default function (truffle) {\n  var fields = []\n  var tags = []\n\n  for (var key in truffle) {\n    if (key !== 'id' && key !== 'hostId' && key !== 'timestamp') {\n      if (typeof(truffle[key]) === 'boolean') {\n        tags.push( { type: key, value: truffle[key] } )\n      } else {\n        fields.push( { type: key, value: truffle[key] } )\n      }\n    }\n  }\n\n  return fields.concat(tags)\n}\n","import React from 'react'\nimport Truffle from '../Truffle'\nimport TruffleRepository from '../../lib/TruffleRepository'\nimport extractFields from '../../lib/extract-truffle-fields'\n\nclass TruffleFeed extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      truffleRepo: null\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"/feed.json\")\n      .then(res => res.json())\n      .then(rawFeed => {\n        var repo = new TruffleRepository()\n        repo.parse(rawFeed)\n        return repo\n      })\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            truffleRepo: result\n          })\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          })\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, truffleRepo } = this.state\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          {truffleRepo.hostIdList.map(id => {\n              var truffle = truffleRepo.masterList.get(id)\n              return <Truffle\n                      key={truffle.id}\n                      id={truffle.id}\n                      hostId={truffle.hostId}\n                      timestamp={truffle.timestamp}\n                      fields={extractFields(truffle)}\n                      guests={truffleRepo.getGuests(truffle)}\n                     />\n            })\n          }\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default TruffleFeed\n","import React from 'react'\nimport Truffle from '../Truffle'\nimport extractFields from '../../lib/extract-truffle-fields'\n\nconst Guests = ({ guests }) => {\n\n  if (guests.length > 0) {\n    return (\n      <div>\n        <h2>Guests</h2>\n        {guests.map(truffle => {\n            return <Truffle\n                    key={truffle.id}\n                    id={truffle.id}\n                    hostId={truffle.hostId}\n                    timestamp={truffle.timestamp}\n                    fields={extractFields(truffle)}\n                    guests={[]}\n                   />\n          })\n        }\n      </div>\n    )\n  }\n\n  return <div />\n}\n\nexport default Guests\n","import React from 'react'\nimport Truffle from '../Truffle'\nimport Guests from '../Guests'\nimport TruffleRepository from '../../lib/TruffleRepository'\nimport extractFields from '../../lib/extract-truffle-fields'\nimport Link from \"gatsby-link\"\nimport styled from \"styled-components\"\n\nconst BackLink = styled(Link)`\n  text-decoration: none;\n`\n\nclass SingleTruffle extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      truffleRepo: null,\n      id: props.id\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"/feed.json\")\n      .then(res => res.json())\n      .then(rawFeed => {\n        var repo = new TruffleRepository()\n        repo.parse(rawFeed)\n        return repo\n      })\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            truffleRepo: result\n          })\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          })\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, truffleRepo, id } = this.state\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      var truffle = truffleRepo.masterList.get(id)\n      var guests = truffleRepo.getGuests(truffle)\n      return (\n        <div>\n          <Truffle\n            key={truffle.id}\n            id={truffle.id}\n            hostId={truffle.hostId}\n            timestamp={truffle.timestamp}\n            fields={extractFields(truffle)}\n            guests={[]}\n           />\n           <Guests guests={guests} />\n           <BackLink to=\"/reader/\">🔙 return to list</BackLink>\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default SingleTruffle\n","import React from 'react'\nimport TruffleFeed from '../components/TruffleFeed'\nimport SingleTruffle from '../components/SingleTruffle'\nimport Layout from \"../components/layout\"\n\n\nconst Reader = (props) => {\n  let hash = props.location.hash\n\n  if (hash === '' || hash === '#/') {\n    return (\n      <Layout>\n        <TruffleFeed />\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      <SingleTruffle id={hash.replace(/#\\//, '')} />\n    </Layout>\n  )\n}\n\nexport default Reader\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Link from 'gatsby-link'\n\nconst Header = () => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          Truffle\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Header from '../components/Header'\nimport './layout.css'\n\nconst TemplateWrapper = ({ children }) => (\n  <div>\n    <Helmet\n      title=\"Truffle\"\n      meta={[\n        { name: 'description', content: 'hosted conversations open to interpretation' },\n        { name: 'keywords', content: 'publishing, JSON, social networking' },\n      ]}\n    />\n    <Header />\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '0px 1.0875rem 1.45rem',\n        paddingTop: 0,\n      }}\n    >\n      {children}\n    </div>\n  </div>\n)\n\n\nexport default TemplateWrapper\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n"],"sourceRoot":""}